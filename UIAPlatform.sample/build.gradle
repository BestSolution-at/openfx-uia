plugins {
    id "application"
}

java {
    withSourcesJar()

    toolchain {
        // since auto detection is disabled only the env var JDK8FX is picked up as java 8 toolchain (see gradle.properties)
        // it seems not possible to query for toolchains with included JavaFX...
        languageVersion = JavaLanguageVersion.of(8)
    }
}

jar {
    from sourceSets.main.output
}

repositories {
    mavenCentral()
}

configurations {
    platformLib
}

dependencies {
    implementation project(":UIAPlatform")
    testImplementation("junit:junit:4.13")

    platformLib project(":UIAPlatform") // used to determine the ext dir where the UIAPlatform.jar is located

    implementation "org.asciidoctor:asciidoctorj:2.5.1"
}


import java.nio.file.Paths
def getJDKBase() {
    Paths.get(javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(8)
    }.get().metadata.installationPath.toString())
}

def getJDKExt() {
    getJDKBase().resolve("jre/lib/ext").normalize()
}

def getPlatformExtPath() {
    configurations.platformLib.files[0].parent
}

sourceSets {
    main {
        java {
        }
    }
    launcher {
        java {
        }
    }
}

task phatJar(type: Jar) {
    dependsOn configurations.platformLib

    baseName "launcher"
    from sourceSets.launcher.output
    from configurations.platformLib.files
    from configurations.runtimeElements.artifacts.files
    manifest {
        attributes 'Main-Class': 'uia.sample.PlatformLauncher'
    }
}
        
task runWithPlatform(type: JavaExec) {
	group = 'application'
	description = 'Runs the sample with the glass platfrom configured'

    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(8)
    }

	classpath = sourceSets.main.runtimeClasspath
	main = 'uia.sample.Simple'
	systemProperty "java.ext.dirs", "${getJDKExt()};${getPlatformExtPath()}"
    systemProperty "glass.platform", "UIA"
    systemProperty "glass.accessible.force", true
}

task runWithPlatformDbg(type: JavaExec) {
	group = 'application'
	description = 'Runs the sample with the glass platfrom configured'

    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(8)
    }

	classpath = sourceSets.main.runtimeClasspath
	main = 'uia.sample.Simple'
	systemProperty "java.ext.dirs", "${getJDKExt()};${getPlatformExtPath()}"
    systemProperty "glass.platform", "UIA"
    systemProperty "glass.accessible.force", true

    jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,address=5005'
}
