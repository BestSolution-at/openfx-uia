plugins {
    id "application"
}

java {
    withSourcesJar()

    toolchain {
        // since auto detection is disabled only the env var JDK8FX is picked up as java 8 toolchain (see gradle.properties)
        // it seems not possible to query for toolchains with included JavaFX...
        languageVersion = JavaLanguageVersion.of(8)
    }
}

jar {
    from sourceSets.main.output
}

repositories {
    mavenCentral()
}

configurations {
    agent
}

dependencies {
    implementation project(":UIAPlatform")
    agent project(":UIAPlatform.agent")
}

def getAgentJar() {
    configurations.agent.files[0]
}

sourceSets {
    main {
        java {
        }
    }
    launcher {
        java {
        }
    }
}

task phatJar(type: Jar) {
    dependsOn configurations.agent

    baseName "launcher"
    from sourceSets.launcher.output
    from configurations.agent.files
    from configurations.runtimeClasspath.files
    from configurations.runtimeElements.artifacts.files
    manifest {
        attributes 'Main-Class': 'uia.sample.PlatformLauncher'
    }
}

task runWithAgent(type: JavaExec) {
    dependsOn configurations.agent

  	group = 'application'
	description = 'Runs the sample with the glass platfrom configured'

    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(8)
    }

	classpath = sourceSets.main.runtimeClasspath
	main = 'uia.sample.Simple'

    jvmArgs "-javaagent:${getAgentJar()}"
}

task debugWithAgent(type: JavaExec) {
    dependsOn configurations.agent
    
  	group = 'application'
	description = 'Runs the sample with the glass platfrom configured'

    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(8)
    }

	classpath = sourceSets.main.runtimeClasspath
	main = 'uia.sample.Simple'

    jvmArgs "-javaagent:${getAgentJar()}"
    jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,address=5005'
}

